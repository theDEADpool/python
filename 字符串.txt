1、join方法
str.join(dst)
dst可以是列表也可以是字符串
作用就是将str加到dst每个成员中间，然后将拼接后的结果以字符串的形式返回
dst = ['1','2','3','4']
str = '+'
str.join(dst)==>'1+2+3+4+5'
如果将dst = [1, 2, 3, 4, 5]
str.join(dst)会报错，要求dst的成员必须是字符串。
dst='12345'
str='abc'
str.join(dst)==>'1abc2abc3abc4abc5'

2、split方法
str.join(dst)
以dst为分隔符将str字符串拆分成一个列表返回
注意这种
str='+1+2+3+4+'
dst='+'
str.split(dst)==>['', '1', '2', '3', '4', '']，返回的列表前后都有一个空的成员
如果分隔符在字符串中不存在
str='+1+2+3+4+'
dst='-'
str.split(dst)==>['+1+2+3+4+']，还是会生成一个列表

3、通过'r/R'关键字来输出原始字符串。
print 'a\nb'
输出
a
b

print r'a\nb' 或 print R'a\nb'
输出
a\nb

4、字符串格式化str.format()
format是字符串类型的一个方法，介绍几种用法：

1)按指定顺序输出多个字符串：
print ("{1} {0}".format("hello", "world"))
输出
world hello

print ("{1} {0} {1}".format("hello", "world"))
输出
world hello world
字符串个数和顺序都可以任意指定

2)通过参数输出多个字符串：
print("Name:{name}, Last_name:{ln}".format(name="a", ln="b"))
 
# 通过字典设置参数
site = {"name": "a", "ln": "b"}
print("Name:{name}, Last_name:{ln}".format(**site))
 
# 通过列表索引设置参数
my_list = ['a', 'b']
print("Name:{0[0]}, Last_name:{0[1]}".format(my_list))  # "0" 是必须的